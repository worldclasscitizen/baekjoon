import java.util.*;
import java.io.*;

public class Main {
  static List<Integer> list, originList;
  static int n;
  static StringBuilder sb = new StringBuilder();

  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());
    
    list = new ArrayList<>();
    originList = new ArrayList<>();

    ArrayList<Integer> fruitList = new ArrayList<Integer>();
    fruitList.add(1);
    
    for (int i = 1; i <= 20; i++) {
      originList.add(i);
    }
    n = Integer.parseInt(st.nextToken());
    
    for (int i = 0; i < n; i++) {
      String[] command = br.readLine().split(" ");
      execute(command, i);
    }

    System.out.println(sb);
  }

  private static void execute(String[] commandLine, int index) {
    if(commandLine[0].equals("add")) {
      add(Integer.parseInt(commandLine[1]));
    }
    else if(commandLine[0].equals("remove")) {
      remove(Integer.parseInt(commandLine[1]));
    }
    else if(commandLine[0].equals("check")) {
      check(Integer.parseInt(commandLine[1]));
      if (index != n-1) {
        sb.append("\n");
      }
    }
    else if(commandLine[0].equals("toggle")) {
      toggle(Integer.parseInt(commandLine[1]));
    }
    else if(commandLine[0].equals("all")) {
      all();
    }
    else if(commandLine[0].equals("empty")) {
      empty();
    }
  }

  private static void add(int number) {
    if(!list.contains(number)) {
      list.add(number);
    }
  }

  private static void remove(int number) {
    if(list.contains(number)) {
      list.remove(list.indexOf(number));
    }
  }

  private static void check(int number) {
    if(!list.contains(number)) {
      sb.append(0);
    }
    else {
      sb.append(1);
    }
  }

  private static void toggle(int number) {
    if(list.contains(number)) {
      list.remove(list.indexOf(number));
    }
    else {
      list.add(number);
    }
  }

  private static void all() {
    list = new ArrayList<>(originList);
  }

  private static void empty() {
    list.clear();
  }
}
